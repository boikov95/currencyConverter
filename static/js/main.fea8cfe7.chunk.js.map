{"version":3,"sources":["component/Converter/Converter.module.css","api/api.ts","Redux/convertedreducer.ts","component/Converter/SelectElement.tsx","component/Converter/DisplayConverter.tsx","component/Converter/Converter.tsx","component/Course/CurrencyRatio.tsx","component/Course/Course.tsx","App.tsx","Redux/redux-store.ts","index.js","component/Course/Course.module.css","App.module.css"],"names":["module","exports","instance","axios","create","baseURL","API","get","then","response","data","actions","currency","type","date","timestamp","initialState","convertedAmounts","id","name","description","img","currencyData","updateDate","timeStamp","getConvertedAmount","dispatch","a","error","code","explanation","Valute","Date","substring","replace","Timestamp","convertedreducer","state","action","Option","Select","SelectElement","defaultValue","value","updateData","selectData","exception","filter","className","s","ant_select","onChange","elem","map","ant_select_selection","label","ant_select_selection_text","alt","money","src","DisplayConverter","amount","required","updateMoney","updateSelect","byDefault","disabled","converter_choice","converter_choice_input","currentMoney","toString","Converter","props","useSelector","converted","useDispatch","useState","fromAmount","setFromAmount","toAmount","setToAmount","setMoney","calculatedMoney","setCalculatedMoney","setRequired","useEffect","length","Math","round","Boolean","Number","converter","e","isInteger","target","change","onClick","CurrencyRatio","currentCurrency","currentcourses","currentcourses__cours","currentcourses__cours__rezult","Course","setCurrentCurrency","course","SubMenu","Menu","Sider","Layout","compose","withRouter","collapsed","wrapper","menu","theme","mode","defaultOpenKeys","icon","DollarCircleOutlined","title","Item","to","content","path","render","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","App","getState","document","getElementById"],"mappings":"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","file":"static/js/main.fea8cfe7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"Converter_converter__wO0x-\",\"converter_choice\":\"Converter_converter_choice__I-076\",\"ant_select\":\"Converter_ant_select__eNszT\",\"ant_select_selection\":\"Converter_ant_select_selection__ENQ3y\",\"ant_select_selection_text\":\"Converter_ant_select_selection_text__2wxpO\",\"money\":\"Converter_money__2qEA4\",\"change\":\"Converter_change__MwiuK\",\"converter_choice_input\":\"Converter_converter_choice_input__3Rr2a\",\"required\":\"Converter_required__3Rbnf\",\"error\":\"Converter_error__2DG-w\",\"currentMoney\":\"Converter_currentMoney__1dPIX\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://www.cbr-xml-daily.ru/\",\r\n});\r\n\r\ntype converterReturnType = {\r\n  Date: string;\r\n  PreviousDate: string;\r\n  PreviousURL: string;\r\n  Timestamp: string;\r\n  Valute: any;\r\n  error?: string;\r\n  code?: string;\r\n  explanation?: string;\r\n};\r\n\r\nexport const API = {\r\n  getAmount() {\r\n    return instance\r\n      .get<converterReturnType>(\"/daily_json.js\")\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { API } from \"../api/api\";\r\nimport { AppStateType, InferActionTypes } from \"./redux-store\";\r\n\r\ntype ActionType = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n  saveCurrency: (currency: {}) =>\r\n    ({ type: \"SAVE_CURRENCY\", currency } as const),\r\n  updateDate: (date: string, timestamp: string) =>\r\n    ({ type: \"SAVE_DATE\", date, timestamp } as const),\r\n};\r\n\r\nexport type convertedAmount = {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  img: string;\r\n};\r\n\r\nlet initialState = {\r\n  convertedAmounts: [\r\n    {\r\n      id: 1,\r\n      name: \"USD\",\r\n      description: \"Доллар США\",\r\n      img: \"http://4.bp.blogspot.com/-PSVm0SVC2bE/UeldWXVm55I/AAAAAAAAAJQ/FmSPaoHTbw8/s320/images.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"EUR\",\r\n      description: \"Евро\",\r\n      img: \"https://www.bosunbobs.com/Images/Models/Full/110.Jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"JPY\",\r\n      description: \"Японская иена\",\r\n      img: \"https://hpc2017.org/wp-content/uploads/2016/04/Heat-Pump-Flag-Japan-1.png\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"GBP\",\r\n      description: \"Фунт стерлингов\",\r\n      img: \"https://media2.autokopen.nl/afbeeldingen/britse-vlag-90490-240.jpg\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"CHF\",\r\n      description: \"Швейцарский франк\",\r\n      img: \"https://i2.wp.com/gwam.ch/wp-content/uploads/2017/04/1.jpg?resize=300%2C169&ssl=1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"RUB\",\r\n      description: \"Российский рубль\",\r\n      img: \"https://egor.mp-mp.ru/upload/sync/png/2/d/0/2d04a34a6e938d598ad3643428020c20.png\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"CAD\",\r\n      description: \"Канадский доллар\",\r\n      img: \"https://www.cardly.net/images/flags/ca.png\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"CZK\",\r\n      description: \"Чешский крон\",\r\n      img: \"https://sun9-79.userapi.com/impf/c841623/v841623600/197e7/_3SnPzJPWLA.jpg?size=130x97&quality=96&sign=b15df84352f03de0628b7da7fd77092a&c_uniq_tag=U8N3mkSfUp2oNyMyq2GqzOqs4blnmZPzPetcYd-pwxc&type=album\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"PLN\",\r\n      description: \"Польский злотый\",\r\n      img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Flag_of_Thuringia.svg/250px-Flag_of_Thuringia.svg.png\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"SEK\",\r\n      description: \"Шведская крона\",\r\n      img: \"https://www.consciencelaws.org/images/flagsweden.jpg\",\r\n    },\r\n  ] as Array<convertedAmount>,\r\n  currencyData: {} as any,\r\n  updateDate: \"\" as string,\r\n  timeStamp: \"\" as string,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nlet convertedreducer = (\r\n  state = initialState,\r\n  action: ActionType\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case \"SAVE_CURRENCY\":\r\n      return {\r\n        ...state,\r\n        currencyData: action.currency,\r\n      };\r\n    case \"SAVE_DATE\":\r\n      return {\r\n        ...state,\r\n        updateDate: action.date,\r\n        timeStamp: action.timestamp,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getConvertedAmount =\r\n  (): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> =>\r\n  async (dispatch) => {\r\n    let data = await API.getAmount();\r\n    if (\r\n      !data.error &&\r\n      !data.code &&\r\n      !data.explanation &&\r\n      typeof data === \"object\"\r\n    ) {\r\n      dispatch(actions.saveCurrency(data.Valute));\r\n      dispatch(\r\n        actions.updateDate(\r\n          data.Date.substring(0, 16).replace(\"T\", \" \"),\r\n          data.Timestamp.substring(0, 16).replace(\"T\", \" \")\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\nexport default convertedreducer;\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport s from \"./Converter.module.css\";\r\nimport { convertedAmount } from \"../../Redux/convertedreducer\";\r\n\r\nconst { Option } = Select;\r\n\r\ntype converterFromType = {\r\n  defaultValue: string;\r\n  value: string;\r\n  updateData: (value: string) => void;\r\n  selectData: Array<convertedAmount>;\r\n  exception?: string;\r\n  filter: boolean;\r\n};\r\n\r\nconst SelectElement: React.FC<converterFromType> = ({\r\n  defaultValue,\r\n  value,\r\n  updateData,\r\n  selectData,\r\n  exception,\r\n  filter,\r\n}) => {\r\n  return (\r\n    <Select\r\n      className={s.ant_select}\r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      onChange={updateData}\r\n    >\r\n      {selectData\r\n        .filter((elem) => (filter ? elem.name !== exception : !filter))\r\n        .map((elem) => {\r\n          return (\r\n            <Option\r\n              className={s.ant_select_selection}\r\n              key={elem.id}\r\n              value={elem.name}\r\n              label={elem.name}\r\n            >\r\n              <div className={s.ant_select_selection_text}>\r\n                <img alt=\"Флаг\" className={s.money} src={elem.img} />\r\n                {`${elem.name} (${elem.description})`}\r\n              </div>\r\n            </Option>\r\n          );\r\n        })}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default SelectElement;\r\n","import React from \"react\";\r\nimport s from \"./Converter.module.css\";\r\nimport SelectElement from \"./SelectElement\";\r\nimport { convertedAmount } from \"../../Redux/convertedreducer\";\r\n\r\ntype converterFromType = {\r\n  amount: Array<convertedAmount>;\r\n  required: boolean;\r\n  value: string | number;\r\n  updateMoney: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  updateSelect: (value: string) => void;\r\n  byDefault: string;\r\n  exception: string;\r\n  disabled: boolean;\r\n};\r\n\r\nconst DisplayConverter: React.FC<converterFromType> = ({\r\n  amount,\r\n  required,\r\n  value,\r\n  updateMoney,\r\n  updateSelect,\r\n  byDefault,\r\n  exception,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <div className={s.converter_choice}>\r\n      <div\r\n        className={`${s.converter_choice_input} ${required ? s.required : \"\"}`}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className={`${s.currentMoney} ${required ? s.required : \"\"}`}\r\n          value={value?.toString()}\r\n          disabled={disabled}\r\n          onChange={updateMoney}\r\n        />\r\n        {required && (\r\n          <span className={s.error}>Разрешен ввод только целых чисел!</span>\r\n        )}\r\n      </div>\r\n      <SelectElement\r\n        defaultValue={byDefault}\r\n        value={byDefault}\r\n        updateData={updateSelect}\r\n        selectData={amount}\r\n        exception={exception}\r\n        filter={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayConverter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Converter.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux-store\";\r\nimport { getConvertedAmount } from \"../../Redux/convertedreducer\";\r\nimport DisplayConverter from \"./DisplayConverter\";\r\n\r\ntype converterType = {};\r\n\r\nconst Converter: React.FC<converterType> = (props) => {\r\n  const amount = useSelector(\r\n    (state: AppStateType) => state.converted.convertedAmounts\r\n  );\r\n\r\n  const currencyData = useSelector(\r\n    (state: AppStateType) => state.converted.currencyData\r\n  );\r\n\r\n  const updateDate = useSelector(\r\n    (state: AppStateType) => state.converted.updateDate\r\n  );\r\n\r\n  const timeStamp = useSelector(\r\n    (state: AppStateType) => state.converted.timeStamp\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [fromAmount, setFromAmount] = useState(() => amount[0].name);\r\n  const [toAmount, setToAmount] = useState(() => amount[1].name);\r\n  const [money, setMoney] = useState(\"\");\r\n  const [calculatedMoney, setCalculatedMoney] = useState<number | string>(\"\");\r\n  const [required, setRequired] = useState(false);\r\n\r\n  const updateFromAmount = (value: string) => {\r\n    setFromAmount(value);\r\n  };\r\n\r\n  const updateToAmount = (value: string) => {\r\n    setToAmount(value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setFromAmount(() => toAmount);\r\n    setToAmount(() => fromAmount);\r\n  };\r\n\r\n  const updateMoney = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!Number.isInteger(+e.target.value)) {\r\n      setRequired(true);\r\n    } else {\r\n      setRequired(false);\r\n      setMoney(e.target.value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (+new Date() - +new Date(updateDate)) / 1000 / 60 > 1440 &&\r\n      (+new Date() - +new Date(timeStamp)) / 1000 / 60 > 60\r\n    ) {\r\n      dispatch(getConvertedAmount());\r\n    }\r\n    if (money.length > 0) {\r\n      setCalculatedMoney(\r\n        Math.round(\r\n          (((Boolean(currencyData[fromAmount])\r\n            ? currencyData[fromAmount][\"Value\"] /\r\n              currencyData[fromAmount][\"Nominal\"]\r\n            : 1) *\r\n            Number(money)) /\r\n            (Boolean(currencyData[toAmount])\r\n              ? currencyData[toAmount][\"Value\"] /\r\n                currencyData[toAmount][\"Nominal\"]\r\n              : 1)) *\r\n            100\r\n        ) / 100\r\n      );\r\n    } else {\r\n      setCalculatedMoney(\"\");\r\n    }\r\n  }, [updateDate, timeStamp, toAmount, fromAmount, money]);\r\n\r\n  return (\r\n    <div className={s.converter}>\r\n      <DisplayConverter\r\n        amount={amount}\r\n        required={required}\r\n        updateMoney={updateMoney}\r\n        value={money}\r\n        updateSelect={updateFromAmount}\r\n        byDefault={fromAmount}\r\n        exception={toAmount}\r\n        disabled={false}\r\n      />\r\n      <img\r\n        className={s.change}\r\n        onClick={handleClick}\r\n        alt=\"Поменять\"\r\n        src={\r\n          \"https://www.pngmart.com/files/7/Exchange-Transparent-Background.png\"\r\n        }\r\n      />\r\n      <DisplayConverter\r\n        amount={amount}\r\n        required={false}\r\n        value={calculatedMoney}\r\n        updateMoney={(e: React.ChangeEvent<HTMLInputElement>) => {}}\r\n        updateSelect={updateToAmount}\r\n        byDefault={toAmount}\r\n        exception={fromAmount}\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { convertedAmount } from \"../../Redux/convertedreducer\";\r\nimport { AppStateType } from \"../../Redux/redux-store\";\r\nimport s from \"./Course.module.css\";\r\n\r\ntype CurrencyRatioType = {\r\n  amount: Array<convertedAmount>;\r\n  currentCurrency: string;\r\n};\r\n\r\nconst CurrencyRatio: React.FC<CurrencyRatioType> = ({\r\n  amount,\r\n  currentCurrency,\r\n}) => {\r\n  const currencyData = useSelector(\r\n    (state: AppStateType) => state.converted.currencyData\r\n  );\r\n\r\n  return (\r\n    <div className={s.currentcourses}>\r\n      {amount\r\n        .filter((elem) => elem.name !== currentCurrency)\r\n        .map((elem) => {\r\n          return (\r\n            <div key={elem.id} className={s.currentcourses__cours}>\r\n              <img alt=\"Флаг\" className={s.money} src={elem.img} />\r\n              {`${elem.name} (${elem.description})`}\r\n              <span className={s.currentcourses__cours__rezult}>\r\n                {Math.round(\r\n                  ((Boolean(currencyData[currentCurrency])\r\n                    ? currencyData[currentCurrency][\"Value\"] /\r\n                      currencyData[currentCurrency][\"Nominal\"]\r\n                    : 1) /\r\n                    (Boolean(currencyData[elem.name])\r\n                      ? currencyData[elem.name][\"Value\"] /\r\n                        currencyData[elem.name][\"Nominal\"]\r\n                      : 1)) *\r\n                    10000\r\n                ) / 10000}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyRatio;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Course.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../Redux/redux-store\";\r\nimport CurrencyRatio from \"./CurrencyRatio\";\r\nimport SelectElement from \"../Converter/SelectElement\";\r\nimport { getConvertedAmount } from \"../../Redux/convertedreducer\";\r\n\r\ntype CourseType = {};\r\n\r\nconst Course: React.FC<CourseType> = () => {\r\n  const amount = useSelector(\r\n    (state: AppStateType) => state.converted.convertedAmounts\r\n  );\r\n\r\n  const updateDate = useSelector(\r\n    (state: AppStateType) => state.converted.updateDate\r\n  );\r\n\r\n  const timeStamp = useSelector(\r\n    (state: AppStateType) => state.converted.timeStamp\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerSelect = (value: string) => {\r\n    setCurrentCurrency(value);\r\n  };\r\n\r\n  const [currentCurrency, setCurrentCurrency] = useState(() => amount[0].name);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (+new Date() - +new Date(updateDate)) / 1000 / 60 > 1440 &&\r\n      (+new Date() - +new Date(timeStamp)) / 1000 / 60 > 60\r\n    ) {\r\n      dispatch(getConvertedAmount());\r\n    }\r\n  }, [currentCurrency]);\r\n\r\n  return (\r\n    <div className={s.course}>\r\n      <div>\r\n        <SelectElement\r\n          defaultValue={currentCurrency}\r\n          value={currentCurrency}\r\n          updateData={handlerSelect}\r\n          selectData={amount}\r\n          filter={false}\r\n        />\r\n      </div>\r\n      <CurrencyRatio amount={amount} currentCurrency={currentCurrency} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport s from \"./App.module.css\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getConvertedAmount } from \"./Redux/convertedreducer\";\r\nimport Converter from \"./component/Converter/Converter\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\r\nimport Course from \"./component/Course/Course\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\ntype AppType = {};\r\n\r\nconst AppNew: React.FC<AppType> = (props) => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getConvertedAmount());\r\n  }, []);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <div className={s.wrapper}>\r\n        <div className={s.menu}>\r\n          <Sider collapsed={collapsed} className=\"site-layout-background\">\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={[\"sub1\"]}>\r\n              <SubMenu\r\n                key=\"sub1\"\r\n                icon={<DollarCircleOutlined />}\r\n                title=\"Финансы\"\r\n              >\r\n                <Menu.Item key=\"1\">\r\n                  <Link to=\"/converter\">Конвертация валюты</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                  <Link to=\"/course\">Текущий курс валюты</Link>\r\n                </Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n        </div>\r\n        <div className={s.content}>\r\n          <Route path=\"/converter\" render={() => <Converter />} />\r\n          <Route path=\"/course\" render={() => <Course />} />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default compose(withRouter)(AppNew);\r\n","import {\r\n  Action,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n} from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport convertedreducer from \"./convertedreducer\";\r\n\r\nlet reducers = combineReducers({\r\n  converted: convertedreducer,\r\n});\r\n\r\nexport type InferActionTypes<T> = T extends {\r\n  [key: string]: (...args: any[]) => infer U;\r\n}\r\n  ? U\r\n  : never;\r\n\r\nexport type ThunkTypeEnum<A extends Action, R = Promise<void>> = ThunkAction<\r\n  R,\r\n  AppStateType,\r\n  unknown,\r\n  A\r\n>;\r\n\r\ntype reducersType = typeof reducers;\r\nexport type AppStateType = ReturnType<reducersType>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./Redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App state={store.getState()} />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"Course_course__1Q_no\",\"currentcourses\":\"Course_currentcourses__d0yks\",\"currentcourses__cours\":\"Course_currentcourses__cours__1FTyV\",\"currentcourses__cours__rezult\":\"Course_currentcourses__cours__rezult__3W9gB\",\"money\":\"Course_money__EbYpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3VplE\",\"content\":\"App_content__3hrKm\"};"],"sourceRoot":""}